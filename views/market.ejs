<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Retrieve Data</title>
    <style>
        /* Add your styles here */
    </style>
</head>
<body>
    <div class="container" id="dataContainer"></div>

    <style>
        .container{
            margin-top : 200px;
        }

        .main{
            display : flex;
            flex-direction : row;
            align-items: center;
            justify-content: center;
        }

        .twitter{
            height: 240px;
            width : 600px;
            background-color: lightgray;
            display : flex;
            flex-direction : row;
            margin-top : 10px;
            margin-bottom : 10px;
        }

        .twitter-two{
            height : 200px;
            width : 510px;
            background-color: lightseagreen;
        }

        .twitter-head{
            height : 45px;
            width : 510px;
            background-color: lightcyan;
        }

        .twitter-post{
            height : 150px;
            width : 510px;
            background-color: rgb(129, 231, 204);
        }

        .twitter-like{
            height : 45px;
            width : 510px;
            background-color: lightskyblue;
        }

        .twitter-profile{
            height : 70px;
            width : 70px;
            border-radius : 50%;
            background-color: bisque;
            margin-top : 10px;
        }

        .twitter-one{
            height : 240px;
            width : 90px;
            background-color: lightgreen;
            display : flex;
            flex-direction : row;
            justify-content: center;
        }

        .feed{
            padding : 10px 10px 10px 10px;
            font-family: Arial, Helvetica, sans-serif;
            font-size: 16px;
        }

        .twitter-head{
            display : flex;
            flex-direction : row;
            align-items: center;
            font-family: Arial, Helvetica, sans-serif;

        }

        .name{
            font-weight: bold;
            margin-left : 10px;
        }
        
        .user-name{
            margin-left : 10px;
        }

        .time{
            margin-left : 10px;
        }
    </style>

    <style>
        .left{
            position : fixed;
            left : 0px;
            bottom : 0px;
            width : 200px;
            background-color: lightcoral;
        }
    </style>

    <style>
        .post{
            display : flex;
            flex-direction : row;
            justify-content: center;
            align-items: center;
            position : fixed;
            top : 0px;
            left : 540px;
            height : 200px;
            width : 600px;
            background-color: lavender;
        }

        .ek{
            height : 50px;
            width : 450px;
            padding-left : 15px;
            border-style : none;
            /* background-color: lavender; */
        }

        .sbutton{
            height : 50px;
            width : 80px;
            border-style : none;
            color : rgb(255, 255, 255);
            background-color: rgb(162, 216, 216);
            font-weight: bold;
        }

        .box{
            margin-left : 10px;
        }
    </style>

    <form action="http://localhost:5554/product/post/6566fe32a82c2a092b626052" method="post">
        <div class="post">
            <div class="box"><input class="ek" type="text" placeholder="What is happening ?" name="post"></div>
            <div class="box"><input class="sbutton" type="submit" value="Post"></div>
        </div>
    </form>

    <div class="left"></div>
    <div class="right"></div>

    <script>
        document.addEventListener('DOMContentLoaded', fetchData);

        async function fetchData() {
            try {
                const response = await fetch('http://localhost:5554/product/post/6572eb471d285ea2463513ab');
                const data = await response.json();

                if (response.ok) {
                    displayData(data);
                } else {
                    console.error('Error retrieving data:', data.error || 'Unknown error');
                }
            } catch (error) {
                console.error('Fetch error:', error.message);
            }
        }

        function displayData(data) {
            const dataContainer = document.getElementById('dataContainer');

            if (Array.isArray(data) && data.length > 0) {
                // Create HTML for each post in the array
                const html = data.map(post => `
                    <div class="main">
                        <div class="twitter">
                            <div class="twitter-one">
                                <div class="twitter-profile"></div>
                            </div>
                            <div class="twitter-two">
                                <div class="twitter-head">
                                    <div class="name">${post.userId.FirstName}</div>
                                    <div class="user-name">@${post.userId.FirstName}</div>
                                    <div class="time" id="liveTime">${post.liveTime}</div>
                                </div>
                                <div class="twitter-post">
                                    <div class="feed">${post.post}</div>
                                </div>
                                <div class="twitter-like"></div>
                            </div>
                        </div> 
                    </div>
                `).join('');

                dataContainer.innerHTML = html;
            } else {
                console.error('Unexpected data structure:', data);
                dataContainer.innerHTML = '<p>Error: Unexpected data structure</p>';
            }
        }

        function updateLiveTime(data) {
            data.forEach(post => {
                const liveTimeElement = document.getElementById(`liveTime`);
                if (liveTimeElement) {
                    liveTimeElement.textContent = post.liveTime;
                }
            });
        }
    </script>
</body>
</html>
